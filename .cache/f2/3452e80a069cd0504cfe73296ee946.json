{"id":"node_modules/async-validator/es/rule/required.js","dependencies":[{"name":"E:\\code\\code\\own\\gojs-demo\\package.json","includedInParent":true,"mtime":1577543878715},{"name":"E:\\code\\code\\own\\gojs-demo\\node_modules\\async-validator\\package.json","includedInParent":true,"mtime":499162500000},{"name":"../util","loc":{"line":1,"column":22},"parent":"E:\\code\\code\\own\\gojs-demo\\node_modules\\async-validator\\es\\rule\\required.js","resolved":"E:\\code\\code\\own\\gojs-demo\\node_modules\\async-validator\\es\\util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar util = _interopRequireWildcard(require(\"../util\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n *  Rule for validating required fields.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction required(rule, value, source, errors, options, type) {\n  if (rule.required && (!source.hasOwnProperty(rule.field) || util.isEmptyValue(value, type || rule.type))) {\n    errors.push(util.format(options.messages.required, rule.fullField));\n  }\n}\n\nvar _default = required;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":3,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":0}},{"name":"required","generated":{"line":25,"column":9},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":9}},{"generated":{"line":25,"column":17},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":0}},{"name":"rule","generated":{"line":25,"column":18},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":18}},{"generated":{"line":25,"column":22},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":0}},{"name":"value","generated":{"line":25,"column":24},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":24}},{"generated":{"line":25,"column":29},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":0}},{"name":"source","generated":{"line":25,"column":31},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":31}},{"generated":{"line":25,"column":37},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":0}},{"name":"errors","generated":{"line":25,"column":39},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":39}},{"generated":{"line":25,"column":45},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":0}},{"name":"options","generated":{"line":25,"column":47},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":47}},{"generated":{"line":25,"column":54},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":0}},{"name":"type","generated":{"line":25,"column":56},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":56}},{"generated":{"line":25,"column":60},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":0}},{"generated":{"line":25,"column":62},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":14,"column":62}},{"generated":{"line":26,"column":0},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":2}},{"name":"rule","generated":{"line":26,"column":6},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":6}},{"generated":{"line":26,"column":10},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":10}},{"name":"required","generated":{"line":26,"column":11},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":11}},{"generated":{"line":26,"column":19},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":6}},{"generated":{"line":26,"column":24},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":24}},{"name":"source","generated":{"line":26,"column":25},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":25}},{"generated":{"line":26,"column":31},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":31}},{"name":"hasOwnProperty","generated":{"line":26,"column":32},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":32}},{"generated":{"line":26,"column":46},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":25}},{"name":"rule","generated":{"line":26,"column":47},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":47}},{"generated":{"line":26,"column":51},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":51}},{"name":"field","generated":{"line":26,"column":52},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":52}},{"generated":{"line":26,"column":57},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":25}},{"generated":{"line":26,"column":58},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":24}},{"name":"util","generated":{"line":26,"column":62},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":62}},{"generated":{"line":26,"column":66},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":66}},{"name":"isEmptyValue","generated":{"line":26,"column":67},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":67}},{"generated":{"line":26,"column":79},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":62}},{"name":"value","generated":{"line":26,"column":80},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":80}},{"generated":{"line":26,"column":85},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":62}},{"name":"type","generated":{"line":26,"column":87},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":87}},{"generated":{"line":26,"column":91},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":91}},{"name":"rule","generated":{"line":26,"column":95},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":95}},{"generated":{"line":26,"column":99},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":99}},{"name":"type","generated":{"line":26,"column":100},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":100}},{"generated":{"line":26,"column":104},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":62}},{"generated":{"line":26,"column":105},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":6}},{"generated":{"line":26,"column":106},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":2}},{"generated":{"line":26,"column":108},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":15,"column":108}},{"name":"errors","generated":{"line":27,"column":0},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":4}},{"name":"errors","generated":{"line":27,"column":4},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":4}},{"generated":{"line":27,"column":10},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":10}},{"name":"push","generated":{"line":27,"column":11},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":11}},{"generated":{"line":27,"column":15},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":4}},{"name":"util","generated":{"line":27,"column":16},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":16}},{"generated":{"line":27,"column":20},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":20}},{"name":"format","generated":{"line":27,"column":21},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":21}},{"generated":{"line":27,"column":27},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":16}},{"name":"options","generated":{"line":27,"column":28},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":28}},{"generated":{"line":27,"column":35},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":35}},{"name":"messages","generated":{"line":27,"column":36},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":36}},{"generated":{"line":27,"column":44},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":28}},{"name":"required","generated":{"line":27,"column":45},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":45}},{"generated":{"line":27,"column":53},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":16}},{"name":"rule","generated":{"line":27,"column":55},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":55}},{"generated":{"line":27,"column":59},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":59}},{"name":"fullField","generated":{"line":27,"column":60},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":60}},{"generated":{"line":27,"column":69},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":16}},{"generated":{"line":27,"column":70},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":16,"column":4}},{"generated":{"line":28,"column":0},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":17,"column":3}},{"generated":{"line":29,"column":0},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":18,"column":1}},{"name":"required","generated":{"line":31,"column":15},"source":"node_modules/async-validator/es/rule/required.js","original":{"line":20,"column":15}}],"sources":{"node_modules/async-validator/es/rule/required.js":"import * as util from '../util';\n\n/**\n *  Rule for validating required fields.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction required(rule, value, source, errors, options, type) {\n  if (rule.required && (!source.hasOwnProperty(rule.field) || util.isEmptyValue(value, type || rule.type))) {\n    errors.push(util.format(options.messages.required, rule.fullField));\n  }\n}\n\nexport default required;"},"lineCount":null}},"error":null,"hash":"19584db1df3b905d3215e8d9e804f8af","cacheData":{"env":{}}}